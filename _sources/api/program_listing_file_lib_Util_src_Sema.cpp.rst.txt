
.. _program_listing_file_lib_Util_src_Sema.cpp:

Program Listing for File Sema.cpp
=================================

|exhale_lsh| :ref:`Return to documentation for file <file_lib_Util_src_Sema.cpp>` (``lib/Util/src/Sema.cpp``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #include "Sema.h"
   
   #include "esp_log.h"
   
   namespace util {
   
   static const char* TAG = "Semaphore";
   
   Semaphore::Semaphore(const char* dbg_name)
       : m_handle(),
         m_dbg_name(dbg_name)
   {
       ESP_LOGD(TAG, "new semaphore \"%s\"", m_dbg_name);
       m_handle = xSemaphoreCreateBinary();
       xSemaphoreGive(m_handle);
   }
   
   Semaphore::Semaphore(Semaphore&& other)
       : m_handle(other.m_handle),
         m_dbg_name(other.m_dbg_name)
   {
       other.m_handle = 0;
   }
   
   Semaphore::~Semaphore()
   {
       if (m_handle != 0) vSemaphoreDelete(m_handle);
   }
   
   void Semaphore::take()
   {
       ESP_LOGD(TAG, "take \"%s\"", m_dbg_name);
       xSemaphoreTake(m_handle, portMAX_DELAY);
   }
   
   void Semaphore::give()
   {
       ESP_LOGD(TAG, "give \"%s\"", m_dbg_name);
       xSemaphoreGive(m_handle);
   }
   
   void Semaphore::wait()
   {
       ESP_LOGD(TAG, "wait on \"%s\"", m_dbg_name);
   
       xSemaphoreTake(m_handle, portMAX_DELAY);
       xSemaphoreGive(m_handle);
   }
   
   } // namespace util
